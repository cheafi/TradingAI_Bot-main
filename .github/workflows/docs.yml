name: Deploy Documentation

on:
  push:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'README.md'
      - '*.md'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-docs:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs mkdocs-material mkdocs-mermaid2-plugin
          pip install mkdocstrings[python] mkdocs-jupyter
      
      - name: Setup Pages
        uses: actions/configure-pages@v3
      
      - name: Create mkdocs configuration
        run: |
          cat > mkdocs.yml << 'EOF'
          site_name: TradingAI Bot Documentation
          site_description: AI-powered trading bot with ML pipeline and Telegram integration
          site_url: https://cheafi.github.io/TradingAI_Bot-main/
          repo_url: https://github.com/cheafi/TradingAI_Bot-main
          repo_name: cheafi/TradingAI_Bot-main
          
          theme:
            name: material
            palette:
              - scheme: default
                primary: blue
                accent: cyan
                toggle:
                  icon: material/brightness-7
                  name: Switch to dark mode
              - scheme: slate
                primary: blue
                accent: cyan
                toggle:
                  icon: material/brightness-4
                  name: Switch to light mode
            features:
              - navigation.tabs
              - navigation.sections
              - navigation.expand
              - navigation.top
              - search.highlight
              - search.share
              - content.code.copy
          
          plugins:
            - search
            - mkdocstrings:
                handlers:
                  python:
                    options:
                      docstring_style: numpy
            - mermaid2
          
          markdown_extensions:
            - pymdownx.highlight:
                anchor_linenums: true
            - pymdownx.inlinehilite
            - pymdownx.snippets
            - pymdownx.superfences:
                custom_fences:
                  - name: mermaid
                    class: mermaid
                    format: !!python/name:pymdownx.superfences.fence_code_format
            - pymdownx.tabbed:
                alternate_style: true
            - admonition
            - pymdownx.details
            - pymdownx.mark
            - pymdownx.caret
            - pymdownx.keys
            - pymdownx.tilde
            - tables
            - footnotes
            - md_in_html
          
          nav:
            - Home: index.md
            - Getting Started:
              - Installation: installation.md
              - Quick Start: quick-start.md
              - Configuration: configuration.md
            - User Guide:
              - Telegram Bot: telegram-bot.md
              - Streamlit UI: streamlit-ui.md
              - Trading Strategies: strategies.md
              - Risk Management: risk-management.md
            - Developer Guide:
              - Architecture: architecture.md
              - API Reference: api-reference.md
              - Contributing: contributing.md
              - Testing: testing.md
            - Deployment:
              - Docker: docker.md
              - Cloud Deployment: cloud-deployment.md
              - Security: security.md
            - Examples:
              - Basic Usage: examples/basic.md
              - Advanced Strategies: examples/advanced.md
              - Custom Indicators: examples/indicators.md
          EOF
      
      - name: Create documentation structure
        run: |
          mkdir -p docs
          
          # Copy main documentation files
          cp README.md docs/index.md
          cp CONTRIBUTING.md docs/contributing.md
          cp SECURITY.md docs/security.md
          cp CODE_OF_CONDUCT.md docs/code-of-conduct.md
          
          # Create missing documentation pages
          mkdir -p docs/examples
          
          cat > docs/installation.md << 'EOF'
          # Installation Guide
          
          ## Requirements
          
          - Python 3.9 or higher
          - pip package manager
          - Git (for development)
          
          ## Quick Installation
          
          ### Using pip (Recommended)
          
          ```bash
          pip install tradingai-bot
          ```
          
          ### From Source
          
          ```bash
          git clone https://github.com/cheafi/TradingAI_Bot-main.git
          cd TradingAI_Bot-main
          pip install -r requirements.txt
          pip install -e .
          ```
          
          ### Using Docker
          
          ```bash
          docker pull tradingai-bot:latest
          docker run -d --name tradingai-bot tradingai-bot:latest
          ```
          
          ## Verification
          
          ```python
          import src
          print("TradingAI Bot installed successfully!")
          ```
          EOF
          
          cat > docs/quick-start.md << 'EOF'
          # Quick Start Guide
          
          Get up and running with TradingAI Bot in 5 minutes!
          
          ## 1. Installation
          
          ```bash
          pip install tradingai-bot
          ```
          
          ## 2. Basic Configuration
          
          Create a `.env` file:
          
          ```bash
          TELEGRAM_TOKEN=your_bot_token_here
          TELEGRAM_CHAT_ID=your_chat_id_here
          ```
          
          ## 3. Start the Bot
          
          ```bash
          python src/telegram/real_investment_bot.py
          ```
          
          ## 4. Launch UI
          
          ```bash
          streamlit run ui/enhanced_dashboard.py
          ```
          
          ## 5. Test Trading
          
          Send `/start` to your Telegram bot to begin!
          EOF
          
          cat > docs/configuration.md << 'EOF'
          # Configuration Guide
          
          ## Environment Variables
          
          | Variable | Required | Description |
          |----------|----------|-------------|
          | `TELEGRAM_TOKEN` | Yes | Your Telegram bot token |
          | `TELEGRAM_CHAT_ID` | No | Your Telegram chat ID |
          | `CRYPTO_SYMBOLS` | No | Trading symbols (default: BTC/USDT,ETH/USDT) |
          | `CRYPTO_EXCHANGE` | No | Exchange to use (default: binance) |
          | `CRYPTO_TIMEFRAME` | No | Trading timeframe (default: 15m) |
          
          ## Configuration Files
          
          ### secrets.toml
          
          ```toml
          TELEGRAM_TOKEN = "123456:ABCDEF"
          TELEGRAM_CHAT_ID = "123456789"
          CRYPTO_SYMBOLS = "BTC/USDT,ETH/USDT"
          ```
          
          ### crypto_strategy.yml
          
          ```yaml
          exchange: binance
          symbols: ["BTC/USDT", "ETH/USDT"]
          timeframe: "15m"
          indicators:
            ema_fast: 50
            ema_slow: 200
            rsi_len: 14
          risk:
            stop_pct: 0.03
          ```
          EOF
          
          cat > docs/examples/basic.md << 'EOF'
          # Basic Usage Examples
          
          ## Simple Trading Strategy
          
          ```python
          from src.strategies.scalping import ScalpingStrategy
          
          # Create strategy
          strategy = ScalpingStrategy()
          
          # Generate signals
          signals = strategy.generate_signals(price_data)
          ```
          
          ## Telegram Bot Commands
          
          - `/start` - Initialize the bot
          - `/portfolio` - View your portfolio
          - `/suggest AAPL` - Get AI trading suggestion
          - `/chart MSFT` - Generate price chart
          EOF
      
      - name: Build documentation
        run: |
          mkdocs build
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-docs
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2